{"version":3,"file":"static/js/576.7fd8c9aa.chunk.js","mappings":"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","sources":["api/themoviedb.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"865220edb76d328a218413f2d052d337\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: \"en-US\",\n};\naxios.defaults.headers = \"Access-Control-Allow-Origin\";\n\nexport const fetchTrends = async () => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\");\n    return data.results;\n  } catch (error) {\n    window.alert(\"fetch trend\");\n  }\n};\n\nexport const fetchData = async (query) => {\n  try {\n    const { data } = await axios.get(`/search/movie?${API_KEY}query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieImage = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/images`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieReview = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieByQuery = async (query) => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from \"react-loader-spinner\";\nimport css from \"./Loader.module.css\";\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import { useState } from 'react';\nimport css from './SearchBar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return;\n    }\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSearchSubmit}>\n        <button className={css.button} type=\"submit\">\n          <span className={css.label}>Search</span>\n        </button>\n        <input\n          className={css.input}\n          value={query}\n          onChange={handleInputChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Please enter movie's name\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Searchbar;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ list }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {list &&\n        list.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}    \n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams, useNavigate, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovieByQuery } from 'api/themoviedb';\n\nimport Searchbar from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const [searchParams] = useSearchParams();\n\n  const navigate = useNavigate();\n\n  const handleSearchSubmit = useCallback(\n    async query => {\n      try {\n        setIsLoading(true);\n        const results = await fetchMovieByQuery(query);\n        setSearchQuery(results);\n        searchParams.set('query', query);\n        navigate(`/movies?${searchParams.toString()}`);\n        setIsLoading(false);\n      } catch (error) {\n        console.log('error', error);\n        setSearchQuery([]);\n      }\n    },\n    [navigate, searchParams]\n  );\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!movieId) return;\n      try {\n        const results = await fetchMovieByQuery(movieId);\n        setSearchQuery(results);\n      } catch (error) {\n        console.log('error', error);\n        setSearchQuery([]);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      handleSearchSubmit(query);\n    }\n  }, [searchParams, handleSearchSubmit]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSearchSubmit} />\n      <MoviesList list={searchQuery}></MoviesList>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","api_key","language","fetchTrends","data","results","window","alert","fetchMovieDetails","id","fetchMovieReview","fetchMovieCast","cast","fetchMovieByQuery","query","Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","onSubmit","useState","setQuery","e","preventDefault","trim","type","value","onChange","target","autoComplete","autoFocus","placeholder","list","location","useLocation","map","title","to","state","from","searchQuery","setSearchQuery","isLoading","setIsLoading","movieId","useParams","useSearchParams","searchParams","navigate","useNavigate","handleSearchSubmit","useCallback","set","toString","console","log","useEffect","fetchMovies","get"],"sourceRoot":""}