{"version":3,"file":"static/js/330.254fccbe.chunk.js","mappings":"+SAEMA,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,+BAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASF,EACTG,SAAU,SAEZF,EAAAA,EAAAA,SAAAA,QAAyB,8BAElB,IAAMG,EAAW,mCAAG,+GAEAH,EAAAA,EAAAA,IAAU,uBAFV,uBAEfI,EAFe,EAEfA,KAFe,kBAGhBA,EAAKC,SAHW,gCAKvBC,OAAOC,MAAM,eALU,yDAAH,qDAoBXC,EAAiB,mCAAG,WAAOC,GAAP,kGAENT,EAAAA,EAAAA,IAAA,iBAAoBS,IAFd,uBAErBL,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,uCAK7BE,OAAOC,MAAP,MAL6B,kBAMtB,IANsB,yDAAH,sDAoBjBG,EAAgB,mCAAG,WAAOD,GAAP,kGAELT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFK,uBAEpBL,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,gCAK5BE,OAAOC,MAAP,MAL4B,yDAAH,sDAShBI,EAAc,mCAAG,WAAOF,GAAP,kGAEHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAFG,uBAElBL,EAFkB,EAElBA,KAFkB,kBAGnBA,EAAKQ,MAHc,gCAK1BN,OAAOC,MAAP,MAL0B,yDAAH,sDASdM,EAAiB,mCAAG,WAAOC,GAAP,kGAENd,EAAAA,EAAAA,IAAA,8BAAiCc,IAF3B,uBAErBV,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,gCAK7BC,OAAOC,MAAP,MAL6B,yDAAH,qD,mECrE9B,EAAyB,uB,SCEZQ,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,mHCdD,GAAgB,aAAe,gC,SCe/B,EAZiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,eAAIP,UAAWC,EAAAA,aAAf,SACGM,EAAOC,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,MAAP,OACV,eAAIT,UAAWC,EAAAA,WAAf,UACE,SAAC,KAAD,CAAMS,GAAE,iBAAYjB,GAApB,SAA2BgB,KADOhB,EAD1B,KAOjB,E,2BCsBD,EA/Ba,WACX,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,mCAAG,8GAEK7B,EAAAA,EAAAA,MAFL,OAERC,EAFQ,OAGdwB,EAAUxB,GAHI,gDAKd6B,QAAQC,IAAI,QAAZ,MACAN,EAAU,IANI,yBAQdE,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,IAECH,GACK,SAACd,EAAA,EAAD,KAIP,+BACE,SAAC,EAAD,CAAUQ,OAAQA,KAGvB,C","sources":["api/themoviedb.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Trending/Trending.module.css?bc7e","components/Trending/Trending.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"865220edb76d328a218413f2d052d337\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: \"en-US\",\n};\naxios.defaults.headers = \"Access-Control-Allow-Origin\";\n\nexport const fetchTrends = async () => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\");\n    return data.results;\n  } catch (error) {\n    window.alert(\"fetch trend\");\n  }\n};\n\nexport const fetchData = async (query) => {\n  try {\n    const { data } = await axios.get(`/search/movie?${API_KEY}query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieImage = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/images`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieReview = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieByQuery = async (query) => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from \"react-loader-spinner\";\nimport css from \"./Loader.module.css\";\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trendingList\":\"Trending_trendingList__Yl5Ur\"};","import { Link } from \"react-router-dom\";\nimport css from \"./Trending.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Trending = ({ movies }) => {\n  return (\n    <ul className={css.trendingList}>\n      {movies.map(({ id, title }) => (\n        <li className={css.trendingEl} key={id}>\n          <Link to={`movies/${id}`}>{title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Trending;\n\nTrending.propTypes = {\n  list: PropTypes.string,\n};\n","import Trending from 'components/Trending/Trending';\nimport { useState, useEffect } from 'react';\nimport { fetchTrends } from 'api/themoviedb';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const data = await fetchTrends();\n        setMovies(data);\n      } catch (error) {\n        console.log('error', error);\n        setMovies([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Trending movies={movies} />\n    </>\n  );\n};\n\nexport default Home;"],"names":["API_KEY","axios","api_key","language","fetchTrends","data","results","window","alert","fetchMovieDetails","id","fetchMovieReview","fetchMovieCast","cast","fetchMovieByQuery","query","Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","movies","map","title","to","useState","setMovies","isLoading","setIsLoading","useEffect","getMovies","console","log"],"sourceRoot":""}