{"version":3,"file":"static/js/143.740d20a4.chunk.js","mappings":"+SAEMA,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,+BAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASF,EACTG,SAAU,SAEZF,EAAAA,EAAAA,SAAAA,QAAyB,8BAElB,IAAMG,EAAW,mCAAG,+GAEAH,EAAAA,EAAAA,IAAU,uBAFV,uBAEfI,EAFe,EAEfA,KAFe,kBAGhBA,EAAKC,SAHW,gCAKvBC,OAAOC,MAAM,eALU,yDAAH,qDAoBXC,EAAiB,mCAAG,WAAOC,GAAP,kGAENT,EAAAA,EAAAA,IAAA,iBAAoBS,IAFd,uBAErBL,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,uCAK7BE,OAAOC,MAAP,MAL6B,kBAMtB,IANsB,yDAAH,sDAoBjBG,EAAgB,mCAAG,WAAOD,GAAP,kGAELT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFK,uBAEpBL,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,gCAK5BE,OAAOC,MAAP,MAL4B,yDAAH,sDAShBI,EAAc,mCAAG,WAAOF,GAAP,kGAEHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAFG,uBAElBL,EAFkB,EAElBA,KAFkB,kBAGnBA,EAAKQ,MAHc,gCAK1BN,OAAOC,MAAP,MAL0B,yDAAH,sDASdM,EAAiB,mCAAG,WAAOC,GAAP,kGAENd,EAAAA,EAAAA,IAAA,8BAAiCc,IAF3B,uBAErBV,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,gCAK7BC,OAAOC,MAAP,MAL6B,yDAAH,qD,sDCrE9B,OAAiB,E,SCoBjB,EAlBkB,SAAC,GAA6B,IAA3BQ,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAChC,OAAKD,GASH,4BACE,eAAIE,UAAWC,EAAAA,MAAf,SAA2BJ,IAC1BE,IAAU,0BAAI,WAASA,MACxB,gBAAKC,UAAWC,EAAAA,KAAhB,SAA2BH,QAV3B,4BACE,wBAAKD,KACL,yBAAK,gDAWZ,C,mEClBD,EAAyB,uB,SCEZK,EAAS,WACpB,OACE,gBAAKF,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEE,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,2HCsCC,UA/Ca,WACX,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA4BE,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAc,mCAAG,8GAEAxB,EAAAA,EAAAA,IAAiBgB,GAFjB,cAEbtB,EAFa,OAGnB0B,EAAU1B,EAAKC,QAAQ,IAHJ,kBAIZD,GAJY,gCAMnBE,OAAOC,MAAP,MANmB,yBAQnByB,GAAa,GARM,4EAAH,qDAWpBE,GACD,GAAE,CAACR,IAEAK,GACK,SAAC,IAAD,IAGJF,GAYH,0BACE,SAAC,IAAD,CACEd,MAAO,SACPC,KAAMa,EAAOM,QACblB,OAAQY,EAAOZ,YAdjB,0BACE,SAAC,IAAD,CACEF,MAAO,SACPC,KAAM,+CAef,C","sources":["api/themoviedb.jsx","components/DetailsEl/DetailsEl.module.css","components/DetailsEl/DetailsEl.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ReviewComp/ReviewComp.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"865220edb76d328a218413f2d052d337\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: \"en-US\",\n};\naxios.defaults.headers = \"Access-Control-Allow-Origin\";\n\nexport const fetchTrends = async () => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\");\n    return data.results;\n  } catch (error) {\n    window.alert(\"fetch trend\");\n  }\n};\n\nexport const fetchData = async (query) => {\n  try {\n    const { data } = await axios.get(`/search/movie?${API_KEY}query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieImage = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/images`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieReview = async (id) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieByQuery = async (query) => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './DetailsEl.module.css';\nimport PropTypes from 'prop-types';\n\nconst DetailsEl = ({ title, text, author }) => {\n  if (!text) {\n    return (\n      <div>\n        <h2>{title}</h2>\n        <div>We don't have any reviews for this movie.</div>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h2 className={css.title}>{title}</h2>\n      {author && <h3>Author: {author}</h3>}\n      <div className={css.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default DetailsEl;\n\nDetailsEl.propTypes = {\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string,\n};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from \"react-loader-spinner\";\nimport css from \"./Loader.module.css\";\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import { fetchMovieReview } from 'api/themoviedb';\nimport DetailsEl from 'components/DetailsEl/DetailsEl';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Review = () => {\n    const { moviesId } = useParams();\n    const [review, setReview] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n  \n    useEffect(() => {\n      setIsLoading(true);\n      const getMovieReview = async () => {\n        try {\n          const data = await fetchMovieReview(moviesId);\n          setReview(data.results[0]);\n          return data;\n        } catch (error) {\n          window.alert(error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      getMovieReview();\n    }, [moviesId]);\n  \n    if (isLoading) {\n      return <Loader />;\n    }\n  \n    if (!review) {\n      return (\n        <div>\n          <DetailsEl\n            title={'Review'}\n            text={\"We don't have any reviews for this movie.\"}\n          />\n        </div>\n      );\n    }\n  \n    return (\n      <div>\n        <DetailsEl\n          title={'Review'}\n          text={review.content}\n          author={review.author}\n        />\n      </div>\n    );\n  };\n\n  export default Review;"],"names":["API_KEY","axios","api_key","language","fetchTrends","data","results","window","alert","fetchMovieDetails","id","fetchMovieReview","fetchMovieCast","cast","fetchMovieByQuery","query","title","text","author","className","css","Loader","strokeColor","strokeWidth","animationDuration","width","visible","moviesId","useParams","useState","review","setReview","isLoading","setIsLoading","useEffect","getMovieReview","content"],"sourceRoot":""}